{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"4vBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAMvBC,EAAkBF,IAAOG,GAAV,KAKfC,EAA2BJ,IAAOC,IAAV,KCkBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGtDD,EAnBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACdK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAEf,OACI,kBAACf,EAAD,KACI,kBAACG,EAAD,KAAmBW,GACnB,kBAACT,EAAD,KAEQU,EAAMC,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAgBC,IAAMD,EAAKE,GAAKF,KAAOA,YCZvEG,EAAkBC,YAAyB,CAC7CC,UAAW,SAAAf,GAAK,OAAKgB,YAA0BhB,MAG7CP,EAA0BwB,YAC5BlB,YAAQc,GACRK,IAF4BD,CAG9BE,GAEa1B,a,gCCjBf,oJAEM2B,EAAa,SAAApB,GAAK,OAAIA,EAAMqB,MAErBC,EAAoBC,YAC7B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAaf,KAAI,SAAAE,GAAG,OAAIa,EAAYb,MAAQ,MAG5ER,EAAmB,SAAAyB,GAAkB,OAAIL,YAClD,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYI,GAAsB,SAGvDC,EAA6BN,YACtC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKS,cAGJd,EAA4BO,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,oEClBJN,IAJK,SAAAa,GAAgB,OAAI,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BACtE,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,o+CCFpD,IAAMC,EAA0BvC,IAAOC,IAAV,KAkCvBuC,EAAYxC,YAAOyC,IAAPzC,CAAH,KAeT0C,EAAkB1C,IAAOC,IAAV,KAMN,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B5C,IAAOC,IAAV,KAQzB4C,EAAgB7C,IAAO8C,KAAV,KAKbC,EAAiB/C,IAAO8C,KAAV,KCzCZzC,gBAAQ,MAJI,SAAA2C,GAAQ,MAAK,CACpCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGvBX,EArBQ,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QACpBC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SAErB,OACA,kBAACJ,EAAD,KACI,kBAACG,EAAD,CAAiBC,SAAUA,IAC3B,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,KAAiBI,IAErB,kBAACX,EAAD,CAAWY,QAAS,kBAAMH,EAAQjC,IAAOqC,UAAQ,GAAjD","file":"static/js/7.b881a0cb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n    CollectionPageContainer,\r\n    CollectionTitle,\r\n    CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n    const { title, items } = collection;\r\n    \r\n    return (\r\n        <CollectionPageContainer>\r\n            <CollectionTitle>{ title }</CollectionTitle>\r\n            <CollectionItemsContainer>\r\n                {\r\n                    items.map(item => <CollectionItem key={ item.id } item={ item } /> )\r\n                }\r\n            </CollectionItemsContainer>\r\n        </CollectionPageContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n)\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps}/>\r\n};\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport {\r\n    CollectionItemContainer,\r\n    CollectionFooterContainer,\r\n    AddButton,\r\n    BackgroundImage,\r\n    NameContainer,\r\n    PriceContainer \r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item;\r\n\r\n    return (\r\n    <CollectionItemContainer>\r\n        <BackgroundImage imageUrl={imageUrl} />\r\n        <CollectionFooterContainer>\r\n            <NameContainer>{name}</NameContainer>\r\n            <PriceContainer>{price}</PriceContainer>\r\n        </CollectionFooterContainer>\r\n        <AddButton onClick={() => addItem(item)} inverted> \r\n            Add to cart \r\n        </AddButton>\r\n    </CollectionItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}