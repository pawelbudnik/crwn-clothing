{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id"],"mappings":"6NA8BeA,G,OAAAA,YAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG7BH,EAxBM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACA,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKC,IAAKJ,EAAUK,IAAI,UAE5B,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACZ,yBAAKA,UAAU,QAAQG,QAAS,kBAAMT,EAAWC,KAAjD,UACA,0BAAMK,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAAQG,QAAS,kBAAMV,EAAQE,KAA9C,WAEJ,0BAAMK,UAAU,SAASF,GACzB,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMb,EAAUK,KAAxD,e,oCCmBOS,EAnCc,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACtBO,EAAyB,IAARP,EAkBvB,OACI,kBAAC,IAAD,CACIQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA1BQ,SAAAA,GACZC,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQN,EACRQ,MAAOA,KAEZK,MAAK,SAAAC,GACJC,MAAM,wBACPC,OAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAmBF,GAC/BF,MAAM,qFAeNK,UA5Be,iHCqCrBC,G,OAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,OAGI3C,sBAAQsC,EAARtC,EAvCM,SAAC,GAAD,IAAGwC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACjB,yBAAK9B,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,0CAEJ,yBAAKA,UAAU,gBACX,8CAEJ,yBAAKA,UAAU,gBACX,4CAEJ,yBAAKA,UAAU,gBACX,wCAEJ,yBAAKA,UAAU,gBACX,0CAIJ4B,EAAUI,KAAI,SAAArC,GAAQ,OAClB,kBAAC,EAAD,CAAcsC,IAAKtC,EAASuC,GAAIvC,SAAUA,OAGlD,yBAAKK,UAAU,SAAQ,yCAAe8B,IACtC,yBAAK9B,UAAU,gBAAf,2DAEI,6BAFJ,+CAKA,kBAAC,EAAD,CAAsBF,MAAOgC","file":"static/js/5.4fb7a314.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\n \r\nimport './checkout-item.styles.scss';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n    const { name, imageUrl, price, quantity } = cartItem;\r\n    return(\r\n    <div className='checkout-item'>\r\n        <div className='image-container'>\r\n            <img src={imageUrl} alt='item'/>\r\n        </div>\r\n        <span className='name'>{name}</span>\r\n        <span className='quantity'>\r\n            <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n            <span className='value'>{quantity}</span>\r\n            <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n        </span>\r\n        <span className='price'>{price}</span>\r\n        <div className='remove-button' onClick={() => clearItem(cartItem)}>&#10005;</div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51H2c2jBRXsqAfStzn3wynjvigpVNVDZJeZ5VQfxDbi53Nsl5sUX9TDXKimyPVyduxNxeD2ZVy0nMRuDZJSO0COWt00A0dEmeYk';\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token: token\r\n            }\r\n        }).then(response => {\r\n            alert('Payment Succesful');\r\n        }).catch(error => {\r\n            console.log('Payment error: ', error);\r\n            alert('There was an issue with your payment. Please make sure you use the valid card');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <StripeCheckout\r\n            label='Pay Now'\r\n            name='CRWN Clothing Ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            image='https://svgshare.com/i/CUz.svg'\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StripeCheckoutButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\n\r\nimport './checkout.styles.scss';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n    <div className='checkout-page'>\r\n        <div className='checkout-header'>\r\n            <div className='header-block'>\r\n                <span>Product</span>\r\n            </div>\r\n            <div className='header-block'>\r\n                <span>Description</span>\r\n            </div>\r\n            <div className='header-block'>\r\n                <span>Quantitiy</span>\r\n            </div>\r\n            <div className='header-block'>\r\n                <span>Price</span>\r\n            </div>\r\n            <div className='header-block'>\r\n                <span>Remove</span>\r\n            </div>\r\n        </div>\r\n        {\r\n            cartItems.map(cartItem => (\r\n                <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n            ))\r\n        }\r\n        <div className='total'><span>TOTAL: ${total}</span></div>\r\n        <div className='test-warning'>\r\n            *Please use the following test credit card for payments*\r\n            <br />\r\n            4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n        </div>\r\n        <StripeCheckoutButton price={total} />\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}