{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","FormInput","handleChange","label","otherProps","className","onChange","SignInContainer","styled","div","SignInTitle","h2","ButtonsContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/6.9b70b2ed.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\r\n\r\nimport './form-input.styles.scss'\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n    <div className='group'>\r\n        <input className='form-input' onChange={ handleChange } { ...otherProps } />\r\n        {\r\n            label ? \r\n            (<label className={`${ otherProps.value.length ? 'shrink' : '' } form-input-label`}>\r\n                { label }\r\n            </label>)\r\n            : null\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default FormInput","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n    width: 380px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsContainer } from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' });\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target\r\n\r\n        setCredentials({ ...userCredentials, [name]: value })\r\n    };\r\n\r\n    return(\r\n        <SignInContainer>\r\n            <SignInTitle>I already have an account</SignInTitle>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <FormInput name='email' type='email' value={ email } onChange={ handleChange } label='email' required />\r\n                <FormInput name='password' type='password' value={ password } onChange={ handleChange } label='password' required />\r\n                <ButtonsContainer>\r\n                    <CustomButton type='submit'> Sign in </CustomButton>\r\n                    <CustomButton \r\n                        type='button' \r\n                        onClick={ googleSignInStart } \r\n                        isGoogleSignIn \r\n                    >  \r\n                        Sign in with Google\r\n                    </CustomButton>\r\n                </ButtonsContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n        dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect (null, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 380px;\r\n  \r\n    .title {\r\n      margin: 10px 0;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignUpContainer } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n        if(password !== confirmPassword) {\r\n            alert(\"passwords don't match\")\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return(\r\n        <SignUpContainer>\r\n            <h2 className='title'>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={ handleSubmit } >\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={ displayName }\r\n                    onChange={ handleChange }\r\n                    label='Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={ email }\r\n                    onChange={ handleChange }\r\n                    label='Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={ password }\r\n                    onChange={ handleChange }\r\n                    label='Password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={ confirmPassword }\r\n                    onChange={ handleChange }\r\n                    label='Confirm Password'\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n        </SignUpContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport './sign-in-and-sign-up.styles.scss';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n)\r\n\r\nexport default SignInAndSignUpPage;"],"sourceRoot":""}