{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","className","otherCollectionProps","isLoading","selectIsCollectionFetching","CollectionsOverwievContainer","compose","WithSpinner","CollectionsOverwiev","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","inverted"],"mappings":"g3BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAS1BC,EAAiBF,IAAOG,GAAV,KASdC,EAAmBJ,IAAOC,IAAV,KCMdI,eAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAAjC,OACtB,kBAACX,EAAD,KACI,kBAACG,EAAD,CAAgBS,QAAS,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,YAA8BH,MACxDJ,EAAMQ,eAEX,kBAACV,EAAD,KACKG,EACAQ,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAAAF,GAAI,OACL,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,YCF9CK,G,OAAkBC,YAAyB,CAC7CC,YAAaC,OAGFC,cAAQJ,EAARI,EAda,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,yBAAKG,UAAU,wBAEPH,EAAYL,KAAI,gBAAGE,EAAH,EAAGA,GAAOO,EAAV,6BACZ,kBAAC,EAAD,eAAmBR,IAAKC,GAAQO,WCL1CN,EAAkBC,YAAyB,CAC7CM,UAAWC,MAGTC,EAA+BC,YACjCN,YAAQJ,GACRW,IAFiCD,CAGnCE,GAEaH,a,gCChBf,oJAEMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKb,eAGJC,EAA8Bc,YACvC,CAACD,IACD,SAAAd,GAAW,OAAIA,EAAcgB,OAAOC,KAAKjB,GAAaL,KAAI,SAAAC,GAAG,OAAII,EAAYJ,MAAQ,MAG5EsB,EAAmB,SAAAC,GAAkB,OAAIJ,YAClD,CAACD,IACD,SAAAd,GAAW,OAAKA,EAAcA,EAAYmB,GAAsB,SAGvDb,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,cAGJC,EAA4BN,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKb,gB,oEClBJS,IAJK,SAAAa,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACtE,OAAOlB,EAAY,kBAAC,IAAD,MAAc,kBAACiB,EAAqBC,M,o+CCFpD,IAAMC,EAA0B/C,IAAOC,IAAV,KAkCvB+C,EAAYhD,YAAOiD,IAAPjD,CAAH,KAeTkD,EAAkBlD,IAAOC,IAAV,KAMN,gBAAGkD,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BpD,IAAOC,IAAV,KAQzBoD,EAAgBrD,IAAOsD,KAAV,KAKbC,EAAiBvD,IAAOsD,KAAV,KCzCZ7B,gBAAQ,MAJI,SAAA+B,GAAQ,MAAK,CACpCC,QAAS,SAAAzC,GAAI,OAAIwC,EAASC,YAAQzC,QAGvBS,EArBQ,SAAC,GAAuB,IAArBT,EAAoB,EAApBA,KAAMyC,EAAc,EAAdA,QACpBC,EAA0B1C,EAA1B0C,KAAMC,EAAoB3C,EAApB2C,MAAOR,EAAanC,EAAbmC,SAErB,OACA,kBAACJ,EAAD,KACI,kBAACG,EAAD,CAAiBC,SAAUA,IAC3B,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,KAAiBI,IAErB,kBAACX,EAAD,CAAWrC,QAAS,kBAAM8C,EAAQzC,IAAO4C,UAAQ,GAAjD","file":"static/js/4.656aa91f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport {\r\n    CollectionPreviewContainer,\r\n    TitleContainer,\r\n    PreviewContainer\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n    <CollectionPreviewContainer>\r\n        <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n            {title.toUpperCase()}\r\n        </TitleContainer>\r\n        <PreviewContainer>\r\n            {items\r\n            .filter((item, idx) => idx < 4)\r\n            .map(item => (\r\n                <CollectionItem key={item.id} item={item} />\r\n            ))}\r\n        </PreviewContainer>\r\n    </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\n \r\nimport './collections-overview.styles.scss';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n    <div className='collections-overview'>\r\n        {\r\n            collections.map(({ id, ...otherCollectionProps}) => (\r\n                <CollectionPreview key={id} {...otherCollectionProps} />\r\n            ))\r\n        }\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverwiev from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverwievContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionsOverwiev);\r\n\r\nexport default CollectionsOverwievContainer;","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n)\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps}/>\r\n};\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport {\r\n    CollectionItemContainer,\r\n    CollectionFooterContainer,\r\n    AddButton,\r\n    BackgroundImage,\r\n    NameContainer,\r\n    PriceContainer \r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item;\r\n\r\n    return (\r\n    <CollectionItemContainer>\r\n        <BackgroundImage imageUrl={imageUrl} />\r\n        <CollectionFooterContainer>\r\n            <NameContainer>{name}</NameContainer>\r\n            <PriceContainer>{price}</PriceContainer>\r\n        </CollectionFooterContainer>\r\n        <AddButton onClick={() => addItem(item)} inverted> \r\n            Add to cart \r\n        </AddButton>\r\n    </CollectionItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}