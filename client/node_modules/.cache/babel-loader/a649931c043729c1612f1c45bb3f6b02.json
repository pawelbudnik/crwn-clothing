{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/Pisko/Code/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signOut","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","signInAfterSignUp","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,aAAvE,EAAsFC,aAAtF,QAA2G,gBAA3G;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,+BAAhF;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AAC/D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACU,yBAAD,EAA4BG,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACI,aAAa,CAAC;AAAEgB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACH,GAJD,CAIE,OAAMC,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,OAAV,GAAoB;AACvB,MAAI;AACA,UAAMb,IAAI,CAACa,OAAL,EAAN;AACA,UAAOvB,GAAG,CAACM,cAAc,EAAf,CAAV;AACH,GAHD,CAGE,OAAMgB,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACO,cAAc,CAACe,KAAD,CAAf,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,MAAV,CAAiB;AAAEC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB;AAAX,CAAjB,EAA8D;AACjE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACoB,8BAAL,CAAoCJ,KAApC,EAA0CC,QAA1C,CAAvB;AACA,UAAM3B,GAAG,CAACQ,aAAa,CAAC;AAAEqB,MAAAA,IAAF;AAAQb,MAAAA,cAAc,EAAE;AAAEY,QAAAA;AAAF;AAAxB,KAAD,CAAd,CAAT;AACH,GAHD,CAGE,OAAON,KAAP,EAAc;AACZtB,IAAAA,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUS,iBAAV,CAA4B;AAAEN,EAAAA,OAAO,EAAE;AAAEI,IAAAA,IAAF;AAAQb,IAAAA;AAAR;AAAX,CAA5B,EAAkE;AACrE,QAAMF,uBAAuB,CAACe,IAAD,EAAOb,cAAP,CAA7B;AACH;AAED,OAAO,UAAUgB,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACuB,eAAL,CAAqBtB,cAArB,CAAvB;AACA,UAAMG,uBAAuB,CAACe,IAAD,CAA7B;AACH,GAHD,CAGE,OAAMP,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUY,eAAV,CAA0B;AAACT,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MAAI;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACyB,0BAAL,CAAgCT,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMb,uBAAuB,CAACe,IAAD,CAA7B;AACH,GAHD,CAGE,OAAMP,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMrB,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIE,OAAMO,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUe,mBAAV,GAAgC;AACnC,QAAMtC,UAAU,CAACI,eAAe,CAACmC,oBAAjB,EAAuCN,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUO,kBAAV,GAA+B;AAClC,QAAMxC,UAAU,CAACI,eAAe,CAACqC,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,kBAAV,GAA+B;AAClC,QAAM1C,UAAU,CAACI,eAAe,CAACuC,kBAAjB,EAAqCN,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUO,cAAV,GAA2B;AAC9B,QAAM5C,UAAU,CAACI,eAAe,CAACyC,cAAjB,EAAiCrB,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUsB,aAAV,GAA0B;AAC7B,QAAM9C,UAAU,CAACI,eAAe,CAAC2C,aAAjB,EAAgCtB,MAAhC,CAAhB;AACH;AAED,OAAO,UAAUuB,eAAV,GAA4B;AAC/B,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,eAAjB,EAAkCjB,iBAAlC,CAAhB;AACH;AAED,OAAO,UAAUkB,SAAV,GAAsB;AACzB,QAAMhD,GAAG,CAAC,CACNC,IAAI,CAACmC,mBAAD,CADE,EAENnC,IAAI,CAACqC,kBAAD,CAFE,EAGNrC,IAAI,CAACkC,mBAAD,CAHE,EAINlC,IAAI,CAACyC,cAAD,CAJE,CAAD,CAAT;AAMH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()));\r\n    } catch(error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload: {email, password, displayName }}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email,password);\r\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n    } catch (error) {\r\n        put(signUpFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\r\n    yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: { email, password }}) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}